version: "2.1"

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: api_service_cuol
    command: bash -c "yarn typeorm migration:run && yarn dev"
    ports: 
      - ${PORT}:${PORT}
    depends_on:
      database:
        condition: service_healthy
    environment:
      - TYPEORM_CONNECTION=$TYPEORM_CONNECTION
      - TYPEORM_HOST=$TYPEORM_HOST
      - TYPEORM_USERNAME=$TYPEORM_USERNAME
      - TYPEORM_PASSWORD=$TYPEORM_PASSWORD
      - TYPEORM_DATABASE=$TYPEORM_DATABASE
      - TYPEORM_PORT=$TYPEORM_PORT
      - TYPEORM_LOGGING=$TYPEORM_LOGGING
      - TYPEORM_ENTITIES=$TYPEORM_ENTITIES
      - TYPEORM_MIGRATIONS=$TYPEORM_MIGRATIONS
      - TYPEORM_MIGRATIONS_DIR=$TYPEORM_MIGRATIONS_DIR
    stdin_open: true
    restart: on-failure
    volumes:
      - ".:/app"
    networks:
      rede:

  database:
    image: postgres:12.9
    container_name: pg-database
    ports:
      - "5433:$TYPEORM_PORT"
    user: postgres
    env_file: database.env
    # environment:
    #   - POSTGRES_USER=$TYPEORM_USERNAME
    #   - POSTGRES_PASSWORD=$TYPEORM_PASSWORD
    #   - POSTGRES_DB=$TYPEORM_DATABASE
    # volumes:
    #   - ./data/db:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      timeout: 20s
      retries: 10
    networks:
      rede:

networks:
  rede:
    driver: bridge